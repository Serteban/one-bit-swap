/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GestorBilleteras,
  GestorBilleterasInterface,
} from "../../contracts/GestorBilleteras";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "idOrden",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vendedor",
            type: "address",
          },
          {
            internalType: "address",
            name: "comprador",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "montoVenta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "montoCompra",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaCreacion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaFinalizacion",
            type: "uint256",
          },
          {
            internalType: "enum Datos.EstadoOrden",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "enum Datos.TipoOrden",
            name: "tipo",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string",
            name: "tokenCompra",
            type: "string",
          },
          {
            internalType: "string",
            name: "tokenVenta",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Orden",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevaOrden",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Billetera",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevoAdministrador",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ticker",
            type: "string",
          },
          {
            internalType: "address",
            name: "contrato",
            type: "address",
          },
          {
            internalType: "address",
            name: "oraculo",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimales",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Token",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevoToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "bloquearBilletera",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "desbloquearBilletera",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
    ],
    name: "emptyString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "number",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "exponent",
        type: "int256",
      },
    ],
    name: "expBySquaring",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "hacerAdministrador",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listarAdministradores",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        internalType: "struct Datos.Billetera[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarBilleterasBloqueadas",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        internalType: "struct Datos.Billetera[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ordenes",
    outputs: [
      {
        internalType: "uint256",
        name: "cantidadTotal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cantidadActivas",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ultimaOrdenActiva",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "plataforma",
    outputs: [
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "propietario",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "montoMinimoUSD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "quitarAdministrador",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "number",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "exponent",
        type: "int256",
      },
    ],
    name: "safeMulExp",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokensRegistrados",
    outputs: [
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "contrato",
        type: "address",
      },
      {
        internalType: "address",
        name: "oraculo",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimales",
        type: "uint8",
      },
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "existe",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611892806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634bd368c8116100715780634bd368c81461016a5780634ec7e00d1461017d5780637debf02a1461019057806398fd89b7146101b5578063c7b55d92146101c8578063fb2f1a89146101d057600080fd5b8063092e6f08146100b957806320f340bc146100e15780633282ebc8146100f4578063366226c41461011557806349668238146101285780634a884e1f14610155575b600080fd5b6100cc6100c73660046112aa565b610201565b60405190151581526020015b60405180910390f35b6100cc6100ef3660046112aa565b6104f9565b6101076101023660046112da565b61075e565b6040519081526020016100d8565b6100cc6101233660046112aa565b6107b2565b60055460065460075461013a92919083565b604080519384526020840192909252908201526060016100d8565b61015d610a20565b6040516100d891906113d1565b6100cc6101783660046114ae565b511590565b6100cc61018b3660046112aa565b610ca7565b6101a361019e3660046114ae565b610ead565b6040516100d89695949392919061155f565b6101076101c33660046112da565b610f8f565b61015d610fef565b6000546001546101f29160ff8116916101009091046001600160a01b03169083565b6040516100d8939291906115b6565b336000908152600b602052604081206003015462010000900460ff16801561024f57506001336000908152600b602052604090206003015460ff16600181111561024d5761024d6112fc565b145b80610269575060005461010090046001600160a01b031633145b61028e5760405162461bcd60e51b8152600401610285906115e0565b60405180910390fd5b506000813b80156102b15760405162461bcd60e51b815260040161028590611623565b6001600160a01b0383166102d75760405162461bcd60e51b81526004016102859061165a565b6001600160a01b0383166000908152600b602052604090206003015462010000900460ff166103415760405162461bcd60e51b81526020600482015260166024820152754c612062696c6c6574657261206e6f2065786973746560501b6044820152606401610285565b60016001600160a01b0384166000908152600b6020526040902060030154610100900460ff166001811115610378576103786112fc565b146103d15760405162461bcd60e51b815260206004820152602360248201527f4c612062696c6c657465726120796120736520656e6375656e7472612061637460448201526269766160e81b6064820152608401610285565b6001600160a01b0383166000908152600b6020526040902060038101805461ff001916905560020154600c54610409906001906116be565b81146104a057600c805460009190610423906001906116be565b81548110610433576104336116d1565b600091825260209091200154600c80546001600160a01b039092169250829184908110610462576104626116d1565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600b909152604090206002018190555b6001600160a01b0384166000908152600b6020526040812060020155600c8054806104cd576104cd6116e7565b600082815260209020600019908201810180546001600160a01b03191690550190555060019392505050565b336000908152600b602052604081206003015462010000900460ff16801561054757506001336000908152600b602052604090206003015460ff166001811115610545576105456112fc565b145b80610561575060005461010090046001600160a01b031633145b61057d5760405162461bcd60e51b8152600401610285906115e0565b506000813b80156105a05760405162461bcd60e51b815260040161028590611623565b6001600160a01b0383166105c65760405162461bcd60e51b81526004016102859061165a565b60006001600160a01b0384166000908152600b6020526040902060030154610100900460ff1660018111156105fd576105fd6112fc565b146106595760405162461bcd60e51b815260206004820152602660248201527f4c612062696c6c657465726120796120736520656e6375656e74726120626c6f60448201526571756561646160d01b6064820152608401610285565b6001600160a01b0383166000818152600b60205260408120600301805461ff001916610100179055600c805460018181018355928290527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b03191690931790925590546106d091906116be565b6001600160a01b0384166000908152600b6020526040902060028101919091556003015462010000900460ff16610755576001600160a01b0383166000818152600b602052604081206003810180546201000062ff00001982168117835583546001600160a01b031916909517909255919262ff00ff19909116176001835b02179055505b50600192915050565b60008160000361076f5750816107ac565b600082131561079457610783600a83610f8f565b61078d90846116fd565b90506107ac565b6107a2600a6101c38461172d565b61078d908461175f565b92915050565b6000805461010090046001600160a01b031633146107e25760405162461bcd60e51b81526004016102859061178d565b506000813b80156108055760405162461bcd60e51b815260040161028590611623565b6001600160a01b03831661082b5760405162461bcd60e51b81526004016102859061165a565b6001600160a01b0383166000908152600b602052604090206003015462010000900460ff166108955760405162461bcd60e51b81526020600482015260166024820152754c612062696c6c6574657261206e6f2065786973746560501b6044820152606401610285565b60016001600160a01b0384166000908152600b602052604090206003015460ff1660018111156108c7576108c76112fc565b146109245760405162461bcd60e51b815260206004820152602760248201527f4c612062696c6c6574657261206e6f207469656e6520726f6c2061646d696e6960448201526639ba3930b237b960c91b6064820152608401610285565b6001600160a01b0383166000908152600b6020526040902060038101805460ff19169055600190810154600d54909161095c916116be565b81146109f357600d805460009190610976906001906116be565b81548110610986576109866116d1565b600091825260209091200154600d80546001600160a01b0390921692508291849081106109b5576109b56116d1565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600b909152604090206001018190555b6001600160a01b0384166000908152600b6020526040812060010155600d8054806104cd576104cd6116e7565b6060610a2a61126d565b600d5460009067ffffffffffffffff811115610a4857610a48611498565b604051908082528060200260200182016040528015610a8157816020015b610a6e61126d565b815260200190600190039081610a665790505b5090506000805b600d54811015610c9e57600b6000600d8381548110610aa957610aa96116d1565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160e08101845281549094168452600181810154928501929092526002810154928401929092526003820154606084019160ff90911690811115610b1a57610b1a6112fc565b6001811115610b2b57610b2b6112fc565b81526020016003820160019054906101000a900460ff166001811115610b5357610b536112fc565b6001811115610b6457610b646112fc565b8152600382015462010000900460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b82821015610c4b578382906000526020600020018054610bbe906117ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610bea906117ce565b8015610c375780601f10610c0c57610100808354040283529160200191610c37565b820191906000526020600020905b815481529060010190602001808311610c1a57829003601f168201915b505050505081526020019060010190610b9f565b505050508152505093508360a0015115610c8c5783838381518110610c7257610c726116d1565b60200260200101819052508180610c8890611808565b9250505b80610c9681611808565b915050610a88565b50909392505050565b6000805461010090046001600160a01b03163314610cd75760405162461bcd60e51b81526004016102859061178d565b506000813b8015610cfa5760405162461bcd60e51b815260040161028590611623565b6001600160a01b038316610d205760405162461bcd60e51b81526004016102859061165a565b60016001600160a01b0384166000908152600b602052604090206003015460ff166001811115610d5257610d526112fc565b03610db25760405162461bcd60e51b815260206004820152602a60248201527f4c612062696c6c6574657261207961207469656e6520726f6c2064652061646d60448201526934b734b9ba3930b237b960b11b6064820152608401610285565b6001600160a01b0383166000818152600b60205260408120600301805460ff19166001908117909155600d80548083018255928190527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590920180546001600160a01b03191690931790925554610e2991906116be565b6001600160a01b0384166000908152600b6020526040902060018101919091556003015462010000900460ff16610755576001600160a01b0383166000818152600b602052604081206003810180546201000062ff00001982168117835583546001600160a01b031916909517909255919262ffff0019909116176101008361074f565b8051602081830181018051600882529282019190930120915280548190610ed3906117ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610eff906117ce565b8015610f4c5780601f10610f2157610100808354040283529160200191610f4c565b820191906000526020600020905b815481529060010190602001808311610f2f57829003601f168201915b505050600184015460029094015492936001600160a01b0390811693908116925060ff600160a01b820481169250600160a81b8204811691600160b01b90041686565b600081600003610fa1575060016107ac565b610fac600283611821565b600003610fcb5761078d610fc084806116fd565b6101c360028561175f565b610783610fd884806116fd565b6002610fe5600186611835565b6101c3919061175f565b6060610ff961126d565b600c5460009067ffffffffffffffff81111561101757611017611498565b60405190808252806020026020018201604052801561105057816020015b61103d61126d565b8152602001906001900390816110355790505b5090506000805b600c54811015610c9e57600b6000600c8381548110611078576110786116d1565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160e08101845281549094168452600181810154928501929092526002810154928401929092526003820154606084019160ff909116908111156110e9576110e96112fc565b60018111156110fa576110fa6112fc565b81526020016003820160019054906101000a900460ff166001811115611122576111226112fc565b6001811115611133576111336112fc565b8152600382015462010000900460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b8282101561121a57838290600052602060002001805461118d906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546111b9906117ce565b80156112065780601f106111db57610100808354040283529160200191611206565b820191906000526020600020905b8154815290600101906020018083116111e957829003601f168201915b50505050508152602001906001019061116e565b505050508152505093508360a001511561125b5783838381518110611241576112416116d1565b6020026020010181905250818061125790611808565b9250505b8061126581611808565b915050611057565b6040805160e08101825260008082526020820181905291810182905290606082019081526020016000815260006020820152606060409091015290565b6000602082840312156112bc57600080fd5b81356001600160a01b03811681146112d357600080fd5b9392505050565b600080604083850312156112ed57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6002811061133057634e487b7160e01b600052602160045260246000fd5b50565b6000815180845260005b818110156113595760208185018101518683018201520161133d565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b848110156113c457601f198684030189526113b2838351611333565b98840198925090830190600101611396565b5090979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561148a57888303603f19018552815180516001600160a01b031684528781015188850152868101518785015260608082015160e0919061143b81611312565b9086015260808281015161144e81611312565b9086015260a08281015115159086015260c09182015191850181905261147681860183611379565b9689019694505050908601906001016113f8565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156114c057600080fd5b813567ffffffffffffffff808211156114d857600080fd5b818401915084601f8301126114ec57600080fd5b8135818111156114fe576114fe611498565b604051601f8201601f19908116603f0116810190838211818310171561152657611526611498565b8160405282815287602084870101111561153f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60c08152600061157260c0830189611333565b6001600160a01b0388811660208501528716604084015260ff86166060840152905061159d84611312565b83608083015282151560a0830152979650505050505050565b606081016115c385611312565b9381526001600160a01b0392909216602083015260409091015290565b60208082526023908201527f536f6c6f2070756564656e20616363656465722061646d696e6973747261646f60408201526272657360e81b606082015260800190565b60208082526018908201527f4c612062696c6c657465726120657320696e76616c6964610000000000000000604082015260600190565b6020808252602e908201527f4c6120646972656363696f6e206465206c612062696c6c6574657261206e6f2060408201526d707565646520736572206365726f60901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156107ac576107ac6116a8565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b80820260008212600160ff1b84141615611719576117196116a8565b81810583148215176107ac576107ac6116a8565b6000600160ff1b8201611742576117426116a8565b5060000390565b634e487b7160e01b600052601260045260246000fd5b60008261176e5761176e611749565b600160ff1b821460001984141615611788576117886116a8565b500590565b60208082526021908201527f536f6c6f20656c2070726f706965746172696f207075656465206163636564656040820152603960f91b606082015260800190565b600181811c908216806117e257607f821691505b60208210810361180257634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161181a5761181a6116a8565b5060010190565b60008261183057611830611749565b500790565b8181036000831280158383131683831282161715611855576118556116a8565b509291505056fea26469706673582212202b6161612a4a96426a7b6e56302b36cbb3aba5c5fd3df8fba63afa880b16233264736f6c63430008110033";

type GestorBilleterasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GestorBilleterasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GestorBilleteras__factory extends ContractFactory {
  constructor(...args: GestorBilleterasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GestorBilleteras> {
    return super.deploy(overrides || {}) as Promise<GestorBilleteras>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GestorBilleteras {
    return super.attach(address) as GestorBilleteras;
  }
  override connect(signer: Signer): GestorBilleteras__factory {
    return super.connect(signer) as GestorBilleteras__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GestorBilleterasInterface {
    return new utils.Interface(_abi) as GestorBilleterasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GestorBilleteras {
    return new Contract(address, _abi, signerOrProvider) as GestorBilleteras;
  }
}
