/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GestorBilleteras,
  GestorBilleterasInterface,
} from "../../contracts/GestorBilleteras";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "idOrden",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vendedor",
            type: "address",
          },
          {
            internalType: "address",
            name: "comprador",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "montoVenta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "montoCompra",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaCreacion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaFinalizacion",
            type: "uint256",
          },
          {
            internalType: "enum Datos.EstadoOrden",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "enum Datos.TipoOrden",
            name: "tipo",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string",
            name: "tokenCompra",
            type: "string",
          },
          {
            internalType: "string",
            name: "tokenVenta",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Orden",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevaOrden",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "bloquearBilletera",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "desbloquearBilletera",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
    ],
    name: "emptyString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "hacerAdministrador",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listarAdministradores",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        internalType: "struct Datos.Billetera[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarBilleterasBloqueadas",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        internalType: "struct Datos.Billetera[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ordenes",
    outputs: [
      {
        internalType: "uint256",
        name: "cantidadTotal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cantidadActivas",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ultimaOrdenActiva",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "plataforma",
    outputs: [
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "propietario",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "montoMinimoUSD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_billetera",
        type: "address",
      },
    ],
    name: "quitarAdministrador",
    outputs: [
      {
        internalType: "bool",
        name: "modificado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokensRegistrados",
    outputs: [
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "contrato",
        type: "address",
      },
      {
        internalType: "address",
        name: "oraculo",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimales",
        type: "uint8",
      },
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "existe",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611561806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634bd368c8116100665780634bd368c8146101335780634ec7e00d146101465780637debf02a14610159578063c7b55d921461017e578063fb2f1a891461018657600080fd5b8063092e6f08146100a357806320f340bc146100cb578063366226c4146100de57806349668238146100f15780634a884e1f1461011e575b600080fd5b6100b66100b1366004611060565b6101b7565b60405190151581526020015b60405180910390f35b6100b66100d9366004611060565b610460565b6100b66100ec366004611060565b610673565b60055460065460075461010392919083565b604080519384526020840192909252908201526060016100c2565b61012661088c565b6040516100c29190611165565b6100b6610141366004611242565b511590565b6100b6610154366004611060565b610b13565b61016c610167366004611242565b610cc3565b6040516100c2969594939291906112f3565b610126610da5565b6000546001546101a89160ff8116916101009091046001600160a01b03169083565b6040516100c29392919061134a565b336000908152600a602052604081206003015462010000900460ff16801561020557506001336000908152600a602052604090206003015460ff16600181111561020357610203611090565b145b8061021f575060005461010090046001600160a01b031633145b6102445760405162461bcd60e51b815260040161023b90611374565b60405180910390fd5b506000813b806102665760405162461bcd60e51b815260040161023b906113b7565b6001600160a01b03831661028c5760405162461bcd60e51b815260040161023b906113ee565b6001600160a01b0383166000908152600a602052604090206003015462010000900460ff166102f65760405162461bcd60e51b81526020600482015260166024820152754c612062696c6c6574657261206e6f2065786973746560501b604482015260640161023b565b60006001600160a01b0384166000908152600a6020526040902060030154610100900460ff16600181111561032d5761032d611090565b036103385750919050565b6001600160a01b0383166000908152600a6020526040902060038101805461ff001916905560020154600b5461037090600190611452565b811461040757600b80546000919061038a90600190611452565b8154811061039a5761039a61146b565b600091825260209091200154600b80546001600160a01b0390921692508291849081106103c9576103c961146b565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600a909152604090206002018190555b6001600160a01b0384166000908152600a6020526040812060020155600b80548061043457610434611481565b600082815260209020600019908201810180546001600160a01b03191690550190555060019392505050565b336000908152600a602052604081206003015462010000900460ff1680156104ae57506001336000908152600a602052604090206003015460ff1660018111156104ac576104ac611090565b145b806104c8575060005461010090046001600160a01b031633145b6104e45760405162461bcd60e51b815260040161023b90611374565b506000813b806105065760405162461bcd60e51b815260040161023b906113b7565b6001600160a01b03831661052c5760405162461bcd60e51b815260040161023b906113ee565b60016001600160a01b0384166000908152600a6020526040902060030154610100900460ff16600181111561056357610563611090565b0361056e5750919050565b6001600160a01b0383166000818152600a60205260408120600301805461ff001916610100179055600b805460018181018355928290527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b03191690931790925590546105e59190611452565b6001600160a01b0384166000908152600a6020526040902060028101919091556003015462010000900460ff1661066a576001600160a01b0383166000818152600a602052604081206003810180546201000062ff00001982168117835583546001600160a01b031916909517909255919262ff00ff19909116176001835b02179055505b50600192915050565b6000805461010090046001600160a01b031633146106a35760405162461bcd60e51b815260040161023b90611497565b506000813b806106c55760405162461bcd60e51b815260040161023b906113b7565b6001600160a01b0383166106eb5760405162461bcd60e51b815260040161023b906113ee565b6001600160a01b0383166000908152600a602052604090206003015462010000900460ff166107555760405162461bcd60e51b81526020600482015260166024820152754c612062696c6c6574657261206e6f2065786973746560501b604482015260640161023b565b6001600160a01b0383166000908152600a602052604081206003015460ff16600181111561078557610785611090565b036107905750919050565b6001600160a01b0383166000908152600a6020526040902060038101805460ff19169055600190810154600c5490916107c891611452565b811461085f57600c8054600091906107e290600190611452565b815481106107f2576107f261146b565b600091825260209091200154600c80546001600160a01b0390921692508291849081106108215761082161146b565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600a909152604090206001018190555b6001600160a01b0384166000908152600a6020526040812060010155600c80548061043457610434611481565b6060610896611023565b600c5460009067ffffffffffffffff8111156108b4576108b461122c565b6040519080825280602002602001820160405280156108ed57816020015b6108da611023565b8152602001906001900390816108d25790505b5090506000805b600c54811015610b0a57600a6000600c83815481106109155761091561146b565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160e08101845281549094168452600181810154928501929092526002810154928401929092526003820154606084019160ff9091169081111561098657610986611090565b600181111561099757610997611090565b81526020016003820160019054906101000a900460ff1660018111156109bf576109bf611090565b60018111156109d0576109d0611090565b8152600382015462010000900460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b82821015610ab7578382906000526020600020018054610a2a906114d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a56906114d8565b8015610aa35780601f10610a7857610100808354040283529160200191610aa3565b820191906000526020600020905b815481529060010190602001808311610a8657829003601f168201915b505050505081526020019060010190610a0b565b505050508152505093508360a0015115610af85783838381518110610ade57610ade61146b565b60200260200101819052508180610af490611512565b9250505b80610b0281611512565b9150506108f4565b50909392505050565b6000805461010090046001600160a01b03163314610b435760405162461bcd60e51b815260040161023b90611497565b506000813b80610b655760405162461bcd60e51b815260040161023b906113b7565b6001600160a01b038316610b8b5760405162461bcd60e51b815260040161023b906113ee565b60016001600160a01b0384166000908152600a602052604090206003015460ff166001811115610bbd57610bbd611090565b03610bc85750919050565b6001600160a01b0383166000818152600a60205260408120600301805460ff19166001908117909155600c80548083018255928190527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790920180546001600160a01b03191690931790925554610c3f9190611452565b6001600160a01b0384166000908152600a6020526040902060018101919091556003015462010000900460ff1661066a576001600160a01b0383166000818152600a602052604081206003810180546201000062ff00001982168117835583546001600160a01b031916909517909255919262ffff00199091161761010083610664565b8051602081830181018051600882529282019190930120915280548190610ce9906114d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d15906114d8565b8015610d625780601f10610d3757610100808354040283529160200191610d62565b820191906000526020600020905b815481529060010190602001808311610d4557829003601f168201915b505050600184015460029094015492936001600160a01b0390811693908116925060ff600160a01b820481169250600160a81b8204811691600160b01b90041686565b6060610daf611023565b600b5460009067ffffffffffffffff811115610dcd57610dcd61122c565b604051908082528060200260200182016040528015610e0657816020015b610df3611023565b815260200190600190039081610deb5790505b5090506000805b600b54811015610b0a57600a6000600b8381548110610e2e57610e2e61146b565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160e08101845281549094168452600181810154928501929092526002810154928401929092526003820154606084019160ff90911690811115610e9f57610e9f611090565b6001811115610eb057610eb0611090565b81526020016003820160019054906101000a900460ff166001811115610ed857610ed8611090565b6001811115610ee957610ee9611090565b8152600382015462010000900460ff161515602080830191909152600483018054604080518285028101850182528281529401939260009084015b82821015610fd0578382906000526020600020018054610f43906114d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6f906114d8565b8015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b505050505081526020019060010190610f24565b505050508152505093508360a00151156110115783838381518110610ff757610ff761146b565b6020026020010181905250818061100d90611512565b9250505b8061101b81611512565b915050610e0d565b6040805160e08101825260008082526020820181905291810182905290606082019081526020016000815260006020820152606060409091015290565b60006020828403121561107257600080fd5b81356001600160a01b038116811461108957600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b600281106110c457634e487b7160e01b600052602160045260246000fd5b50565b6000815180845260005b818110156110ed576020818501810151868301820152016110d1565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b8481101561115857601f198684030189526111468383516110c7565b9884019892509083019060010161112a565b5090979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561121e57888303603f19018552815180516001600160a01b031684528781015188850152868101518785015260608082015160e091906111cf816110a6565b908601526080828101516111e2816110a6565b9086015260a08281015115159086015260c09182015191850181905261120a8186018361110d565b96890196945050509086019060010161118c565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561125457600080fd5b813567ffffffffffffffff8082111561126c57600080fd5b818401915084601f83011261128057600080fd5b8135818111156112925761129261122c565b604051601f8201601f19908116603f011681019083821181831017156112ba576112ba61122c565b816040528281528760208487010111156112d357600080fd5b826020860160208301376000928101602001929092525095945050505050565b60c08152600061130660c08301896110c7565b6001600160a01b0388811660208501528716604084015260ff861660608401529050611331846110a6565b83608083015282151560a0830152979650505050505050565b60608101611357856110a6565b9381526001600160a01b0392909216602083015260409091015290565b60208082526023908201527f536f6c6f2070756564656e20616363656465722061646d696e6973747261646f60408201526272657360e81b606082015260800190565b60208082526018908201527f4c612062696c6c657465726120657320696e76616c6964610000000000000000604082015260600190565b6020808252602e908201527f4c6120646972656363696f6e206465206c612062696c6c6574657261206e6f2060408201526d707565646520736572206365726f60901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156114655761146561143c565b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60208082526021908201527f536f6c6f20656c2070726f706965746172696f207075656465206163636564656040820152603960f91b606082015260800190565b600181811c908216806114ec57607f821691505b60208210810361150c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016115245761152461143c565b506001019056fea2646970667358221220b040b01a84d0463fee72aa45afeb38cd4b7a796f04a91ba2406a135031db805364736f6c63430008110033";

type GestorBilleterasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GestorBilleterasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GestorBilleteras__factory extends ContractFactory {
  constructor(...args: GestorBilleterasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GestorBilleteras> {
    return super.deploy(overrides || {}) as Promise<GestorBilleteras>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GestorBilleteras {
    return super.attach(address) as GestorBilleteras;
  }
  override connect(signer: Signer): GestorBilleteras__factory {
    return super.connect(signer) as GestorBilleteras__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GestorBilleterasInterface {
    return new utils.Interface(_abi) as GestorBilleterasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GestorBilleteras {
    return new Contract(address, _abi, signerOrProvider) as GestorBilleteras;
  }
}
