/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GestorTokens,
  GestorTokensInterface,
} from "../../contracts/GestorTokens";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "idOrden",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenActiva",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "siguienteOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "anteriorOrdenGemela",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vendedor",
            type: "address",
          },
          {
            internalType: "address",
            name: "comprador",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "montoVenta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "montoCompra",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaCreacion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fechaFinalizacion",
            type: "uint256",
          },
          {
            internalType: "enum Datos.EstadoOrden",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "enum Datos.TipoOrden",
            name: "tipo",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string",
            name: "tokenCompra",
            type: "string",
          },
          {
            internalType: "string",
            name: "tokenVenta",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Orden",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevaOrden",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "direccion",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "indiceAdmin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indiceBloqueado",
            type: "uint256",
          },
          {
            internalType: "enum Datos.RolBilletera",
            name: "rol",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "ordenes",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Billetera",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevoAdministrador",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ticker",
            type: "string",
          },
          {
            internalType: "address",
            name: "contrato",
            type: "address",
          },
          {
            internalType: "address",
            name: "oraculo",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimales",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Datos.Token",
        name: "respuesta",
        type: "tuple",
      },
    ],
    name: "NuevoToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
    ],
    name: "activarToken",
    outputs: [
      {
        internalType: "bool",
        name: "resultado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
    ],
    name: "consultarCotizacion",
    outputs: [
      {
        internalType: "int256",
        name: "precio",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "decimales",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
    ],
    name: "emptyString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_incluirSuspendidos",
        type: "bool",
      },
    ],
    name: "listarTokens",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ticker",
            type: "string",
          },
          {
            internalType: "address",
            name: "contrato",
            type: "address",
          },
          {
            internalType: "address",
            name: "oraculo",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimales",
            type: "uint8",
          },
          {
            internalType: "enum Datos.EstadoGeneral",
            name: "estado",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "existe",
            type: "bool",
          },
        ],
        internalType: "struct Datos.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "_oraculo",
        type: "address",
      },
    ],
    name: "modifcarOraculo",
    outputs: [
      {
        internalType: "bool",
        name: "resultado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contrato",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oraculo",
        type: "address",
      },
    ],
    name: "nuevoToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ordenes",
    outputs: [
      {
        internalType: "uint256",
        name: "cantidadTotal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cantidadActivas",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ultimaOrdenActiva",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "plataforma",
    outputs: [
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "propietario",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "montoMinimoUSD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
    ],
    name: "suspenderToken",
    outputs: [
      {
        internalType: "bool",
        name: "resultado",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokensRegistrados",
    outputs: [
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "contrato",
        type: "address",
      },
      {
        internalType: "address",
        name: "oraculo",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimales",
        type: "uint8",
      },
      {
        internalType: "enum Datos.EstadoGeneral",
        name: "estado",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "existe",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611886806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c20fc17b11610066578063c20fc17b1461015a578063dd47bdaf1461017a578063e6da48bd1461018d578063fb2f1a89146101a0578063fe5d590e146101d157600080fd5b806349668238146100a35780634bd368c8146100d557806351bd751f146100f857806353493358146101225780637debf02a14610135575b600080fd5b6005546006546007546100b592919083565b604080519384526020840192909252908201526060015b60405180910390f35b6100e86100e3366004611055565b511590565b60405190151581526020016100cc565b61010b610106366004611055565b6101e4565b6040805192835260ff9091166020830152016100cc565b6100e86101303660046110ae565b61033f565b610148610143366004611055565b6104a3565b6040516100cc96959493929190611184565b61016d6101683660046111d9565b610585565b6040516100cc9190611202565b6100e86101883660046112bf565b610819565b6100e861019b366004611055565b610d2d565b6000546001546101c29160ff8116916101009091046001600160a01b03169083565b6040516100cc939291906112e9565b6100e86101df366004611055565b610e65565b6000806008836040516101f79190611311565b9081526040519081900360200190206002015460ff600160b01b9091041661023a5760405162461bcd60e51b81526004016102319061132d565b60405180910390fd5b600060088460405161024c9190611311565b9081526040805191829003602001822060020154633fabe5a360e21b835290516001600160a01b039091169250829163feaf968c9160048083019260a09291908290030181865afa1580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c9919061138c565b50506040805163313ce56760e01b815290519296506001600160a01b038516935063313ce56792600480830193506020928290030181865afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906113dc565b915050915091565b336000908152600b602052604081206003015462010000900460ff16801561038d57506001336000908152600b602052604090206003015460ff16600181111561038b5761038b61114c565b145b806103a7575060005461010090046001600160a01b031633145b6103c35760405162461bcd60e51b8152600401610231906113ff565b600090506008836040516103d79190611311565b9081526040519081900360200190206002015460ff600160b01b909104166104115760405162461bcd60e51b81526004016102319061132d565b813b806104305760405162461bcd60e51b815260040161023190611442565b6001600160a01b0383166104565760405162461bcd60e51b815260040161023190611486565b826008856040516104679190611311565b90815260405190819003602001902060020180546001600160a01b03929092166001600160a01b03199092169190911790555060019392505050565b80516020818301810180516008825292820191909301209152805481906104c9906114d0565b80601f01602080910402602001604051908101604052809291908181526020018280546104f5906114d0565b80156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b505050600184015460029094015492936001600160a01b0390811693908116925060ff600160a01b820481169250600160a81b8204811691600160b01b90041686565b6040805160c08101825260608082526000602083018190529282018390528181018390526080820183905260a08201929092526000600a5467ffffffffffffffff8111156105d5576105d5610f90565b60405190808252806020026020018201604052801561063657816020015b6040805160c0810182526060808252600060208084018290529383018190529082018190526080820181905260a082015282526000199092019101816105f35790505b5090506000805b60095481101561080f5760086009828154811061065c5761065c61150a565b906000526020600020016040516106739190611520565b90815260200160405180910390206040518060c001604052908160008201805461069c906114d0565b80601f01602080910402602001604051908101604052809291908181526020018280546106c8906114d0565b80156107155780601f106106ea57610100808354040283529160200191610715565b820191906000526020600020905b8154815290600101906020018083116106f857829003601f168201915b50505091835250506001828101546001600160a01b0390811660208401526002840154908116604084015260ff600160a01b820481166060850152608090930192600160a81b909104169081111561076f5761076f61114c565b60018111156107805761078061114c565b815260029190910154600160b01b900460ff16151560209091015260a081015190945080156107cb575085806107cb57506000846080015160018111156107c9576107c961114c565b145b156107fd57838383815181106107e3576107e361150a565b602002602001018190525081806107f9906115ac565b9250505b80610807816115ac565b91505061063d565b5090949350505050565b336000908152600b602052604081206003015462010000900460ff16801561086757506001336000908152600b602052604090206003015460ff1660018111156108655761086561114c565b145b80610881575060005461010090046001600160a01b031633145b61089d5760405162461bcd60e51b8152600401610231906113ff565b823b806108fa5760405162461bcd60e51b815260206004820152602560248201527f4c6120646972656363696f6e2064656c20636f6e747261746f20657320696e76604482015264616c69646160d81b6064820152608401610231565b50813b8061091a5760405162461bcd60e51b815260040161023190611442565b6001600160a01b0383166109405760405162461bcd60e51b815260040161023190611486565b60008490506000816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610985573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109ad91908101906115c5565b90506008816040516109bf9190611311565b9081526040519081900360200190206002015460ff600160b01b9091041615610a3f5760405162461bcd60e51b815260206004820152602c60248201527f456c20746f6b656e2079612065737461207265676973747261646f20656e206c60448201526b6120706c617461666f726d6160a01b6064820152608401610231565b816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa591908101906115c5565b600882604051610ab59190611311565b90815260405190819003602001902090610acf908261168b565b50816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3291906113dc565b600882604051610b429190611311565b908152602001604051809103902060020160146101000a81548160ff021916908360ff16021790555085600882604051610b7c9190611311565b908152602001604051809103902060010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555084600882604051610bc29190611311565b908152602001604051809103902060020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000600882604051610c099190611311565b908152604051908190036020019020600201805460ff60a81b1916600160a81b836001811115610c3b57610c3b61114c565b02179055506001600882604051610c529190611311565b9081526040519081900360200190206002018054911515600160b01b0260ff60b01b19909216919091179055600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af01610cba828261168b565b50600a8054906000610ccb836115ac565b91905055507f310b93709752db97b78cd7ee5de3909c4ed8540e51e1e7248020993a440041f2600882604051610d019190611311565b908152604051908190036020018120610d199161174b565b60405180910390a150600195945050505050565b336000908152600b602052604081206003015462010000900460ff168015610d7b57506001336000908152600b602052604090206003015460ff166001811115610d7957610d7961114c565b145b80610d95575060005461010090046001600160a01b031633145b610db15760405162461bcd60e51b8152600401610231906113ff565b60009050600882604051610dc59190611311565b9081526040519081900360200190206002015460ff600160b01b90910416610dff5760405162461bcd60e51b81526004016102319061132d565b6000600883604051610e119190611311565b908152604051908190036020019020600201805460ff60a81b1916600160a81b836001811115610e4357610e4361114c565b0217905550600a8054906000610e58836115ac565b9091555060019392505050565b336000908152600b602052604081206003015462010000900460ff168015610eb357506001336000908152600b602052604090206003015460ff166001811115610eb157610eb161114c565b145b80610ecd575060005461010090046001600160a01b031633145b610ee95760405162461bcd60e51b8152600401610231906113ff565b60009050600882604051610efd9190611311565b9081526040519081900360200190206002015460ff600160b01b90910416610f375760405162461bcd60e51b81526004016102319061132d565b6001600883604051610f499190611311565b908152604051908190036020019020600201805460ff60a81b1916600160a81b836001811115610f7b57610f7b61114c565b0217905550600a8054906000610e5883611839565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fcf57610fcf610f90565b604052919050565b600067ffffffffffffffff821115610ff157610ff1610f90565b50601f01601f191660200190565b600082601f83011261101057600080fd5b813561102361101e82610fd7565b610fa6565b81815284602083860101111561103857600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561106757600080fd5b813567ffffffffffffffff81111561107e57600080fd5b61108a84828501610fff565b949350505050565b80356001600160a01b03811681146110a957600080fd5b919050565b600080604083850312156110c157600080fd5b823567ffffffffffffffff8111156110d857600080fd5b6110e485828601610fff565b9250506110f360208401611092565b90509250929050565b60005b838110156111175781810151838201526020016110ff565b50506000910152565b600081518084526111388160208601602086016110fc565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6002811061118057634e487b7160e01b600052602160045260246000fd5b9052565b60c08152600061119760c0830189611120565b6001600160a01b0388811660208501528716604084015260ff8616606084015290506111c66080830185611162565b82151560a0830152979650505050505050565b6000602082840312156111eb57600080fd5b813580151581146111fb57600080fd5b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156112b157603f19898403018552815160c0815181865261124f82870182611120565b838b01516001600160a01b03908116888d01528a850151168a88015260608085015160ff1690880152608080850151919350915061128f82880182611162565b505060a091820151151594909101939093529386019390860190600101611229565b509098975050505050505050565b600080604083850312156112d257600080fd5b6112db83611092565b91506110f360208401611092565b606081016112f78286611162565b6001600160a01b0393909316602082015260400152919050565b600082516113238184602087016110fc565b9190910192915050565b60208082526025908201527f456c20746f6b656e20696e6772657361646f206e6f2065737461207265676973604082015264747261646f60d81b606082015260800190565b805169ffffffffffffffffffff811681146110a957600080fd5b600080600080600060a086880312156113a457600080fd5b6113ad86611372565b94506020860151935060408601519250606086015191506113d060808701611372565b90509295509295909350565b6000602082840312156113ee57600080fd5b815160ff811681146111fb57600080fd5b60208082526023908201527f536f6c6f2070756564656e20616363656465722061646d696e6973747261646f60408201526272657360e81b606082015260800190565b60208082526024908201527f4c6120646972656363696f6e2064656c206f726163756c6f20657320696e76616040820152636c69646160e01b606082015260800190565b6020808252602a908201527f4c6120646972656363696f6e2064656c206f726163756c6f206e6f20707565646040820152696520736572206365726f60b01b606082015260800190565b600181811c908216806114e457607f821691505b60208210810361150457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600080835461152e816114d0565b60018281168015611546576001811461155b5761158a565b60ff198416875282151583028701945061158a565b8760005260208060002060005b858110156115815781548a820152908401908201611568565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016115be576115be611596565b5060010190565b6000602082840312156115d757600080fd5b815167ffffffffffffffff8111156115ee57600080fd5b8201601f810184136115ff57600080fd5b805161160d61101e82610fd7565b81815285602083850101111561162257600080fd5b6116338260208301602086016110fc565b95945050505050565b601f82111561168657600081815260208120601f850160051c810160208610156116635750805b601f850160051c820191505b818110156116825782815560010161166f565b5050505b505050565b815167ffffffffffffffff8111156116a5576116a5610f90565b6116b9816116b384546114d0565b8461163c565b602080601f8311600181146116ee57600084156116d65750858301515b600019600386901b1c1916600185901b178555611682565b600085815260208120601f198616915b8281101561171d578886015182559484019460019091019084016116fe565b508582101561173b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602080835260c08184015260008454611765816114d0565b8060e087015261010060018084166000811461178857600181146117a2576117d0565b60ff1985168984015283151560051b8901830195506117d0565b896000528660002060005b858110156117c85781548b82018601529083019088016117ad565b8a0184019650505b508801546001600160a01b03166040880181905294506117ef92505050565b60028501546001600160a01b0381166060860152915060a082901c60ff16608085015261182560a0850160ff8460a81c16611162565b61108a60c0850160ff8460b01c1615159052565b60008161184857611848611596565b50600019019056fea264697066735822122078719a0ea21ffe844deb37c3fed25cdc7a1b08dabab913e44274e3fb92d2219d64736f6c63430008110033";

type GestorTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GestorTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GestorTokens__factory extends ContractFactory {
  constructor(...args: GestorTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GestorTokens> {
    return super.deploy(overrides || {}) as Promise<GestorTokens>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GestorTokens {
    return super.attach(address) as GestorTokens;
  }
  override connect(signer: Signer): GestorTokens__factory {
    return super.connect(signer) as GestorTokens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GestorTokensInterface {
    return new utils.Interface(_abi) as GestorTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GestorTokens {
    return new Contract(address, _abi, signerOrProvider) as GestorTokens;
  }
}
